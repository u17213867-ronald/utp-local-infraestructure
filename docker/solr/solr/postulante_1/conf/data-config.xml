<dataConfig>
  <dataSource type="JdbcDataSource" driver="com.mysql.jdbc.Driver" url="jdbc:mysql://mysql:3306/mdb_apt_aptitus?zeroDateTimeBehavior=convertToNull"
  batchSize="-1" user="root" password="1234" convertType="true" />
  <document>
    <entity name="postulante_1" transformer="DateFormatTransformer" query="SELECT
  ps.id                   AS idpostulante,
  ps.ultima_actualizacion AS fecha_cv_update,
  ps.fecha_nac,
  ps.path_foto            AS foto,
  ps.slug                 AS slug,
 CONCAT(ps.nombres,' ',ps.apellido_paterno ,' ',ps.apellido_materno) AS nomape,
  UPPER(CONCAT(ps.nombres,' ',ps.apellido_paterno ,' ',ps.apellido_materno))  AS nomape_ord,
  ps.num_doc              AS numdoc,ps.tipo_doc              AS tipodoc,
  IF(ISNULL(ps.celular),ps.telefono,ps.celular) AS telefono,
  FLOOR(((TO_DAYS(CURDATE()) - TO_DAYS(ps.fecha_nac)) / 365)) AS edad,
  ps.path_cv              AS path_cv,
  (SELECT
     GROUP_CONCAT(DISTINCT CONCAT(IF((LENGTH(ne.id) = 1),'0',''),ne.id,'-',IF((LENGTH(e.id_nivel_estudio_tipo) = 1),'0',''),e.id_nivel_estudio_tipo) SEPARATOR '#-#')
   FROM (estudio e
      JOIN nivel_estudio ne
        ON ((ne.id = e.id_nivel_estudio)))
   WHERE (e.id_postulante = ps.id)) AS estudios_claves,
  (
SELECT
   (((SELECT nivel_estudio.peso FROM nivel_estudio WHERE (nivel_estudio.id = ne.id)) * 100) + (SELECT nivel_estudio.peso FROM nivel_estudio WHERE (nivel_estudio.id = e.id_nivel_estudio_tipo))) AS maxnivel
   FROM (estudio e
      JOIN nivel_estudio ne
        ON ((ne.id = e.id_nivel_estudio)))
   WHERE (e.id_postulante = ps.id)
   ORDER BY (((SELECT
                 nivel_estudio.peso
               FROM nivel_estudio
               WHERE (nivel_estudio.id = ne.id)) * 100) + (SELECT
                                                                     nivel_estudio.peso
                                                                   FROM nivel_estudio
                                                                   WHERE (nivel_estudio.id = IF((e.id_nivel_estudio_tipo = 0),1,e.id_nivel_estudio_tipo))))DESC
   LIMIT 1
    ) AS mayor_nivel_estudio,
  (SELECT
     (SELECT
        GROUP_CONCAT(IF(ISNULL(niv.nombre),'Sin estudios',niv.nombre) SEPARATOR '/')
      FROM nivel_estudio niv
      WHERE ((niv.id IN(e.id_nivel_estudio,e.id_nivel_estudio_tipo))
             AND (e.id_nivel_estudio &lt;&gt; 9))) AS niveles
 FROM (estudio e
      JOIN nivel_estudio ne
        ON ((ne.id = e.id_nivel_estudio)))
   WHERE (e.id_postulante = ps.id)
   ORDER BY (((SELECT
                 nivel_estudio.peso
               FROM nivel_estudio
               WHERE (nivel_estudio.id = ne.id)) * 100) + (SELECT
                                                                     nivel_estudio.peso
                                                                   FROM nivel_estudio
                                                                   WHERE (nivel_estudio.id = IF((e.id_nivel_estudio_tipo = 0),1,e.id_nivel_estudio_tipo))))DESC
   LIMIT 1) AS estudios,
  (SELECT
     IF((e.id_carrera &gt; 0),(SELECT carrera.nombre FROM carrera WHERE (carrera.id = e.id_carrera)),e.otro_carrera) AS car
   FROM (estudio e
      JOIN nivel_estudio ne
        ON ((ne.id = e.id_nivel_estudio)))
   WHERE (e.id_postulante = ps.id)
   ORDER BY (((SELECT
                 nivel_estudio.peso
               FROM nivel_estudio
               WHERE (nivel_estudio.id = ne.id)) * 100) + (SELECT
                                                                     nivel_estudio.peso
                                                                   FROM nivel_estudio
                                                                   WHERE (nivel_estudio.id = IF((e.id_nivel_estudio_tipo = 0),1,e.id_nivel_estudio_tipo))))DESC
   LIMIT 1) AS carrera,

     (SELECT
     IF((e.id_carrera &gt; 0),(SELECT  UPPER( carrera.nombre) FROM carrera WHERE (carrera.id = e.id_carrera)),UPPER(e.otro_carrera)) AS car
   FROM (estudio e
      JOIN nivel_estudio ne
        ON ((ne.id = e.id_nivel_estudio)))
   WHERE (e.id_postulante = ps.id)
   ORDER BY (((SELECT
                 nivel_estudio.peso
               FROM nivel_estudio
               WHERE (nivel_estudio.id = ne.id)) * 100) + (SELECT
                                                                     nivel_estudio.peso
                                                                   FROM nivel_estudio
                                                                   WHERE (nivel_estudio.id = IF((e.id_nivel_estudio_tipo = 0),1,e.id_nivel_estudio_tipo))))DESC
   LIMIT 1) AS carrera_ord,
  (SELECT
     GROUP_CONCAT(DISTINCT CONCAT(IF((LENGTH(tc.id) = 1),'0',''),tc.id) SEPARATOR '#-#')
   FROM ((estudio e
       JOIN carrera c
         ON ((c.id = e.id_carrera)))
      JOIN tipo_carrera tc
        ON ((tc.id = c.id_tipo_carrera)))
   WHERE (e.id_postulante = ps.id)) AS tipo_carrera_claves,
  (SELECT
     SUM((IF(e.fin_ano,((e.fin_ano * 12) + e.fin_mes),((YEAR(CURDATE()) * 12) + MONTH(CURDATE()))) - ((e.inicio_ano * 12) + e.inicio_mes)))
   FROM experiencia e
   WHERE (e.id_postulante = ps.id)) AS experiencia,
  (SELECT
     GROUP_CONCAT(DISTINCT di.id_idioma SEPARATOR '#-#')
   FROM dominio_idioma di
   WHERE (di.id_postulante = ps.id)) AS idiomas,
  (SELECT
     GROUP_CONCAT(DISTINCT CONCAT(IF((LENGTH(dpc.id_programa_computo) = 1),'0',''),dpc.id_programa_computo) SEPARATOR '#-#')
   FROM dominio_programa_computo dpc
   WHERE (dpc.id_postulante = ps.id)) AS programas_claves,
  ps.sexo                 AS sexo,
    (SELECT
     u.nombre
   FROM ubigeo u
   WHERE (u.id = ps.id_ubigeo)) AS ubigeo,

  (SELECT
     CONCAT(dist.id,'#-#',prov.id,'#-#',dpto.id) AS ubigeo
   FROM (((postulante post
        JOIN ubigeo dist
          ON ((dist.id = post.id_ubigeo)))
       JOIN ubigeo prov
         ON ((dist.padre = prov.id)))
      JOIN ubigeo dpto
        ON ((prov.padre = dpto.id)))
   WHERE (post.id = ps.id)) AS ubigeo_claves,
  (
SELECT
     SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT IF(e.otro_puesto='' OR ISNULL (e.id_puesto) ,

  ( SELECT CONCAT( p.nombre) FROM puesto p WHERE p.id=e.id_puesto)   ,e.otro_puesto)
   ORDER BY
  IF(
  (e.fin_ano),

  (((e.fin_ano * 12) + e.fin_mes)  )  ,
  ((YEAR(CURDATE()) * 12) + MONTH(CURDATE()))
  )  DESC

   SEPARATOR '#-#'),'#-#',2)
   FROM experiencia e
   WHERE (e.id_postulante =ps.id )) AS puesto,
  ps.presentacion         AS presentacion,
           (SELECT
                             GROUP_CONCAT(DISTINCT estu.id_nivel_estudio_tipo SEPARATOR '#-#')
                           FROM (estudio estu
                              JOIN nivel_estudio niest
                                ON ((estu.id_nivel_estudio = niest.id)))
                           WHERE ((estu.id_postulante = ps.id)
                                  AND (estu.id_nivel_estudio = 9))) AS otros_estudios,
  ps.destacado            AS destacado
FROM (postulante ps
   JOIN usuario u
     ON ((ps.id_usuario = u.id)))
WHERE ((u.activo = 1)
       AND (ps.prefs_confidencialidad = 0)) ">                                                               <!--datos personales -->
            <field column="idpostulante" name="idpostulante" />
            <field column="fecha_cv_update" name="fecha_cv_update" dateTimeFormat='yyyy-MM-dd HH:mm:ss' />
            <field column="foto" name="foto" />
            <field column="nomape" name="nomape" />
            <field column="nomape_ord" name="nomape_ord" />
            <field column="slug" name="slug" />
            <field column="numdoc" name="numdoc" />
            <field column="telefono" name="telefono" />
            <field column="edad" name="edad" />
            <field column="path_cv" name="path_cv"/>
            <field column="estudios" name="estudios"/>
            <field column="estudios_claves" name="estudios_claves"/>
             <field column="mayor_nivel_estudio" name="mayor_nivel_estudio"/>
            <field column="carrera" name="carrera" />
          <field column="carrera_ord" name="carrera_ord" />
          <field column="tipo_carrera_claves" name="tipo_carrera_claves"/>
          <field column="experiencia" name="experiencia" />
          <field column="idiomas" name="idiomas" />
          <field column="programas_claves" name="programas_claves" />
          <field column="sexo" name="sexo" />
          <field column="ubigeo_claves" name="ubigeo_claves" />
          <field column="ubigeo" name="ubigeo" />
          <field column="puesto" name="puesto"/>
          <field column="otros_estudios" name="otros_estudios"/>
          <field column="presentacion" name="presentacion"/>
          <field column="destacado" name="destacado"/>
           </entity>
     </document>
</dataConfig>
